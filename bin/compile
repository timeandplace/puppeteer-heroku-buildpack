#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LP_DIR=`cd $(dirname $0); cd ..; pwd`
FONTS_DIR=`cd "$LP_DIR/fonts"; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

PACKAGES="gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libcairo-gobject2 libxinerama1 libgtk2.0-0 libpangoft2-1.0-0 libthai0 libpixman-1-0 libxcb-render0 libharfbuzz0b libdatrie1 libgraphite2-3"

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

case "$STACK" in
  "cedar-14")
    APT_FLAGS="--force-yes"
    ;;
  "heroku-16" | "heroku-18")
    APT_FLAGS="--allow-downgrades --allow-remove-essential --allow-change-held-packages"
    ;;
  *)
    error "STACK must be 'cedar-14', 'heroku-16', or 'heroku-18'"
esac

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

for PACKAGE in $PACKAGES; do
  if [[ $PACKAGE == *deb ]]; then
    PACKAGE_NAME=$(basename $PACKAGE .deb)
    PACKAGE_FILE=$APT_CACHE_DIR/archives/$PACKAGE_NAME.deb

    topic "Fetching $PACKAGE"
    curl -s -L -z $PACKAGE_FILE -o $PACKAGE_FILE $PACKAGE 2>&1 | indent
  else
    topic "Fetching .debs for $PACKAGE"
    apt-get $APT_OPTIONS -y $APT_FLAGS -d install --reinstall $PACKAGE | indent
  fi
done

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/puppeteer.sh
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF

export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/x86_64-linux-gnu:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

#give environment to later buildpacks
export | grep -E -e ' (LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"

topic "Rewrite package-config files"
find $BUILD_DIR/.apt -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.apt\1!g'

# KB Following: http://www.omgubuntu.co.uk/2016/08/enable-color-emoji-linux-google-chrome-noto
mkdir -p $BUILD_DIR/.fonts
ls $FONTS_DIR
cp $FONTS_DIR/* $BUILD_DIR/.fonts/

mkdir -p $BUILD_DIR/.config/fontconfig
echo '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <match target="font">
    <!-- If the requested font is Lato Regular -->
    <test name="family" compare="eq">
        <string>Lato Regular</string>
    </test>
    <!-- Replace the entire match list with Bitstream Vera Serif alone -->
    <edit name="family" mode="assign_replace">
      <string>Lato Regular</string>
    </edit>
    <edit name="family" mode="append_last">
      <string>Lato Regular</string>
    </edit>
  </match>

  <match target="font">
    <!-- If the requested font is Lato Black -->
    <test name="family" compare="eq">
        <string>Lato Black</string>
    </test>
    <edit name="family" mode="assign_replace">
      <string>Lato Black</string>
    </edit>
    <edit name="family" mode="append_last">
      <string>Lato Black</string>
    </edit>
  </match>

  <match target="font">
    <!-- If the requested font is Lato Black -->
    <test name="family" compare="eq">
        <string>Avenir</string>
    </test>
    <edit name="family" mode="assign_replace">
      <string>Avenir</string>
    </edit>
    <edit name="family" mode="append_last">
      <string>Avenir</string>
    </edit>
  </match>

  <match target="font">
    <!-- If the requested font is Bitstream Vera Serif -->
    <test name="family" compare="eq">
        <string>Bitstream Vera Serif</string>
    </test>
    <edit name="family" mode="assign_replace">
      <string>Bitstream Vera Serif</string>
    </edit>
    <!-- Assign the serif family -->
    <edit name="family" mode="append_last">
      <string>serif</string>
    </edit>
  </match>

  <match target="font">
    <test name="family" compare="eq">
        <string>Avenir</string>
    </test>
    <edit name="family" mode="assign_replace">
      <string>Avenir</string>
    </edit>
    <!-- Followed by Noto Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Noto Color Emoji</string>
    </edit>
    <!-- Followed by Twitter Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Twitter Color Emoji</string>
    </edit>
    <!-- Assign the serif family -->
    <edit name="family" mode="append_last">
      <string>serif</string>
    </edit>
  </match>

  <match>
    <!-- If the requested font is serif -->
    <test qual="any" name="family">
        <string>serif</string>
    </test>
    <!-- Make Bitstream Vera Serif the first result -->
    <edit name="family" mode="prepend_first">
      <string>Bitstream Vera Serif</string>
    </edit>
    <!-- Followed by Noto Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Noto Color Emoji</string>
    </edit>
    <!-- Followed by Twitter Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Twitter Color Emoji</string>
    </edit>
  </match>

  <match target="font">
    <!-- If the requested font is Bitstream Vera Sans -->
    <test name="family" compare="eq">
        <string>Bitstream Vera Sans</string>
    </test>
    <!-- Replace the entire match list with Bitstream Vera Sans alone -->
    <edit name="family" mode="assign_replace">
      <string>Bitstream Vera Sans</string>
    </edit>
    <!-- Assign the sans-serif family -->
    <edit name="family" mode="append_last">
      <string>sans-serif</string>
    </edit>
  </match>

  <match target="pattern">
    <!-- If the requested font is sans-serif -->
    <test qual="any" name="family">
        <string>sans-serif</string>
    </test>
    <!-- Make Bitstream Vera Sans the first result -->
    <edit name="family" mode="prepend_first">
      <string>Bitstream Vera Sans</string>
    </edit>
    <!-- Followed by Noto Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Noto Color Emoji</string>
    </edit>
    <!-- Followed by Twitter Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Twitter Color Emoji</string>
    </edit>
  </match>

  <match target="font">
    <!-- If the requested font is Bitstream Vera Sans Mono -->
    <test name="family" compare="eq">
        <string>Bitstream Vera Sans Mono</string>
    </test>
    <!-- Replace the entire match list with Bitstream Vera Sans Mono alone -->
    <edit name="family" mode="assign_replace">
      <string>Bitstream Vera Sans Mono</string>
    </edit>
    <!-- Assign the monospace family last -->
    <edit name="family" mode="append_last">
      <string>monospace</string>
    </edit>
  </match>

  <match target="pattern">
    <!-- If the requested font is monospace -->
    <test qual="any" name="family">
        <string>monospace</string>
    </test>
    <!--
    Make Bitstream Vera Sans Mono the first result
    Note: If you want a different monospace font, this is where you change it.
    -->
    <edit name="family" mode="prepend_first">
      <string>Bitstream Vera Sans Mono</string>
    </edit>
    <!-- Followed by Noto Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Noto Color Emoji</string>
    </edit>
    <!-- Followed by Twitter Color Emoji -->
    <edit name="family" mode="prepend_first">
      <string>Twitter Color Emoji</string>
    </edit>
  </match>

  <!-- Add emoji generic family -->
  <alias binding="strong">
    <family>emoji</family>
    <default><family>Twitter Color Emoji</family></default>
  </alias>

  <!-- Alias requests for the other emoji fonts -->
  <alias binding="strong">
    <family>Apple Color Emoji</family>
    <prefer><family>Noto Color Emoji</family></prefer>
    <default><family>sans-serif</family></default>
  </alias>
  <alias binding="strong">
    <family>Segoe UI Emoji</family>
    <prefer><family>Noto Color Emoji</family></prefer>
    <default><family>sans-serif</family></default>
  </alias>
  <alias binding="strong">
    <family>Noto Color Emoji</family>
    <prefer><family>Noto Color Emoji</family></prefer>
    <default><family>sans-serif</family></default>
  </alias>
  <alias binding="strong">
    <family>Apple Color Emoji</family>
    <prefer><family>Twitter Color Emoji</family></prefer>
    <default><family>sans-serif</family></default>
  </alias>
  <selectfont>
    <rejectfont>
      <pattern>
        <patelt name="family">
          <string>DejaVu Sans</string>
        </patelt>
      </pattern>
    </rejectfont>
  </selectfont>
  <selectfont>
    <rejectfont>
      <pattern>
        <patelt name="family">
          <string>DejaVu Serif</string>
        </patelt>
      </pattern>
    </rejectfont>
  </selectfont>
  <selectfont>
    <rejectfont>
      <pattern>
        <patelt name="family">
          <string>Nimbus Sans L</string>
        </patelt>
      </pattern>
    </rejectfont>
  </selectfont>


  <!-- Do not allow any app to fallback to Symbola, ever -->
  <selectfont>
    <rejectfont>
      <pattern>
        <patelt name="family">
          <string>Symbola</string>
        </patelt>
      </pattern>
    </rejectfont>
  </selectfont>

</fontconfig>' > $BUILD_DIR/.config/fontconfig/fonts.conf
fc-cache -f -v
